version: '3.8'

services:
  trading-bot:
    build: .
    container_name: binance-trading-bot
    restart: unless-stopped
    environment:
      # API Configuration
      - BINANCE_API_KEY=${BINANCE_API_KEY}
      - BINANCE_API_SECRET=${BINANCE_API_SECRET}
      
      # Trading Configuration
      - TRADING_STRATEGY=${TRADING_STRATEGY:-tripleEMAStochasticRSIATR}
      - LEVERAGE=${LEVERAGE:-10}
      - ORDER_SIZE=${ORDER_SIZE:-3.0}
      - TRADING_INTERVAL=${TRADING_INTERVAL:-1m}
      
      # Risk Management
      - SL_MULT=${SL_MULT:-1.5}
      - TP_MULT=${TP_MULT:-1.0}
      - TP_SL_CHOICE=${TP_SL_CHOICE:-%}
      - TRADING_THRESHOLD=${TRADING_THRESHOLD:-0.3}
      - MAX_POSITIONS=${MAX_POSITIONS:-10}
      
      # Trading Options
      - TRADE_ALL_SYMBOLS=${TRADE_ALL_SYMBOLS:-true}
      - SYMBOLS_TO_TRADE=${SYMBOLS_TO_TRADE:-BTCUSDT,ETHUSDT,ADAUSDT}
      - COIN_EXCLUSION_LIST=${COIN_EXCLUSION_LIST:-USDCUSDT,BTCDOMUSDT}
      
      # Advanced Options
      - USE_TRAILING_STOP=${USE_TRAILING_STOP:-false}
      - TRAILING_STOP_CALLBACK=${TRAILING_STOP_CALLBACK:-0.1}
      - USE_MARKET_ORDERS=${USE_MARKET_ORDERS:-false}
      - WAIT_FOR_CANDLE_CLOSE=${WAIT_FOR_CANDLE_CLOSE:-true}
      - USE_MULTIPROCESSING=${USE_MULTIPROCESSING:-true}
      
      # Logging Configuration
      - LOG_LEVEL=${LOG_LEVEL:-20}
      - LOG_TO_FILE=${LOG_TO_FILE:-true}
      - LOG_FILE_PATH=${LOG_FILE_PATH:-/app/logs/trading_bot.log}
      
      # Buffer Configuration
      - AUTO_CALCULATE_BUFFER=${AUTO_CALCULATE_BUFFER:-true}
      - BUFFER=${BUFFER:-3 hours ago}
    
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config:ro
    
    networks:
      - trading-network
    
    depends_on:
      - redis
      - prometheus
    
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: trading-bot-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    networks:
      - trading-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    container_name: trading-bot-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - trading-network
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: trading-bot-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - trading-network
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  nginx:
    image: nginx:alpine
    container_name: trading-bot-nginx
    restart: unless-stopped
    volumes:
      - ./monitoring/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - trading-network
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - trading-bot
      - grafana

volumes:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  trading-network:
    driver: bridge